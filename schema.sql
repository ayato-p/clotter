-- MySQL Script generated by MySQL Workbench
-- Wed Jul 19 17:01:09 2017
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema clotter
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema clotter
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `clotter` DEFAULT CHARACTER SET utf8mb4 ;
USE `clotter` ;

-- -----------------------------------------------------
-- Table `clotter`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `clotter`.`user` (
  `id` VARCHAR(20) NOT NULL COMMENT 'ユーザーアカウントID',
  `email` VARCHAR(255) NOT NULL,
  `auth_type` VARCHAR(3) NOT NULL DEFAULT 'NML' COMMENT '通常会員: NML\nシステム管理者: ADM',
  `last_login` TIMESTAMP NULL,
  `hashed_pass` VARCHAR(64) NOT NULL COMMENT 'sha256でハッシュ化されたパスワード',
  `is_active` TINYINT(1) NOT NULL DEFAULT 1 COMMENT '論理削除用フィールド。退会していたら0。',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `last_login` (`last_login` DESC),
  INDEX `email` (`email` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `clotter`.`tweet`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `clotter`.`tweet` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `created_timestamp` TIMESTAMP NOT NULL DEFAULT current_timestamp COMMENT 'ツイートの時間',
  `user_id` VARCHAR(20) NOT NULL,
  `content` VARCHAR(560) NOT NULL COMMENT '4バイト * 140字 = 560バイト\n',
  PRIMARY KEY (`id`),
  INDEX `fk_TWEET_USER_idx` (`user_id` ASC),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `created_datetime` (`created_timestamp` ASC),
  CONSTRAINT `fk_TWEET_USER`
    FOREIGN KEY (`user_id`)
    REFERENCES `clotter`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `clotter`.`tweet_image`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `clotter`.`tweet_image` (
  `tweet_id` INT UNSIGNED NOT NULL,
  `image` VARCHAR(255) NOT NULL COMMENT 'base64化した画像',
  `user_id` VARCHAR(20) NOT NULL,
  INDEX `fk_tweet_image_tweet1_idx` (`tweet_id` ASC),
  PRIMARY KEY (`tweet_id`, `user_id`),
  INDEX `fk_tweet_image_user1_idx` (`user_id` ASC),
  CONSTRAINT `fk_tweet_image_tweet1`
    FOREIGN KEY (`tweet_id`)
    REFERENCES `clotter`.`tweet` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tweet_image_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `clotter`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `clotter`.`tweet_favorite`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `clotter`.`tweet_favorite` (
  `user_id` VARCHAR(20) NOT NULL,
  `tweet_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`user_id`, `tweet_id`),
  INDEX `fk_tweet_favorite_tweet1_idx` (`tweet_id` ASC),
  CONSTRAINT `fk_tweet_favorite_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `clotter`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tweet_favorite_tweet1`
    FOREIGN KEY (`tweet_id`)
    REFERENCES `clotter`.`tweet` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `clotter`.`tweet_retweet`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `clotter`.`tweet_retweet` (
  `tweet_id` INT UNSIGNED NOT NULL,
  `user_id` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`tweet_id`, `user_id`),
  INDEX `fk_tweet_retweet_user1_idx` (`user_id` ASC),
  CONSTRAINT `fk_tweet_retweet_tweet1`
    FOREIGN KEY (`tweet_id`)
    REFERENCES `clotter`.`tweet` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tweet_retweet_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `clotter`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `clotter`.`follow`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `clotter`.`follow` (
  `from_id` VARCHAR(20) NOT NULL,
  `to_id` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`from_id`, `to_id`),
  INDEX `fk_follow_user2_idx` (`to_id` ASC),
  CONSTRAINT `fk_follow_user1`
    FOREIGN KEY (`from_id`)
    REFERENCES `clotter`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_follow_user2`
    FOREIGN KEY (`to_id`)
    REFERENCES `clotter`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `clotter`.`tweet_reply`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `clotter`.`tweet_reply` (
  `to_id` INT UNSIGNED NOT NULL,
  `from_id` INT UNSIGNED NOT NULL,
  PRIMARY KEY (`to_id`, `from_id`),
  INDEX `fk_tweet_reply_tweet2_idx` (`to_id` ASC),
  CONSTRAINT `fk_tweet_reply_tweet1`
    FOREIGN KEY (`from_id`)
    REFERENCES `clotter`.`tweet` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tweet_reply_tweet2`
    FOREIGN KEY (`to_id`)
    REFERENCES `clotter`.`tweet` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `clotter`.`tweet_at`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `clotter`.`tweet_at` (
  `tweet_id` INT UNSIGNED NOT NULL,
  `to_id` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`tweet_id`, `to_id`),
  INDEX `fk_tweet_at_user1_idx` (`to_id` ASC),
  CONSTRAINT `fk_tweet_at_tweet1`
    FOREIGN KEY (`tweet_id`)
    REFERENCES `clotter`.`tweet` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tweet_at_user1`
    FOREIGN KEY (`to_id`)
    REFERENCES `clotter`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;
SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
